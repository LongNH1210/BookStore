<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - BookStore</title>
    <link href="/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/font-awesome/css/all.css" asp-append-version="true" />
   @*  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN" crossorigin="anonymous"></script> *@
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg bg-primary" data-bs-theme="dark">
            <div class="container-fluid">
                <a class="navbar-brand" asp-controller="Home" asp-action="Index">Book Store</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarColor01" aria-controls="navbarColor01" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarColor01">
                    <ul class="navbar-nav me-auto">
                        <li class="nav-item">
                            <a class="nav-link active" asp-controller="Home" asp-action="Index">
                                Home
                            </a>
                        </li>
                    </ul>
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>
    <script>
        loadCartCount();

        async function loadCartCount() {
            try {
                // Use the full URL, including the protocol and domain
                var response = await fetch(/Cart/GetTotalItemInCart);

                // Check if the response status is within the success range (200-299)
                if (response.ok) {
                    var result = await response.json();
                    var cartCountEl = document.getElementById("cartCount");

                    // Check if the element with id "cartCount" exists before updating its content
                    if (cartCountEl) {
                        cartCountEl.innerHTML = result;
                    } else {
                        console.error("Element with id 'cartCount' not found.");
                    }
                } else {
                    console.error(Failed to fetch.Status: ${ response.status });
                }
            } catch (err) {
                console.error("An error occurred:", err);
            }
        }

    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
